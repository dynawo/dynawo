# Copyright (c) 2015-2019, RTE (http://www.rte-france.com)
# See AUTHORS.txt
# All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at http://mozilla.org/MPL/2.0/.
# SPDX-License-Identifier: MPL-2.0
#
# This file is part of Dynawo, an hybrid C++/Modelica open source time domain
# simulation tool for power systems.
#
# Continous Integration setup for Dynawo.

dist: trusty
sudo: required

language: cpp

compiler: g++

notifications:
  email: false

services:
  - docker

env:
  global:
    - DYNAWO_HOME=/home/dynawo_travis/dynawo;
    - DYNAWO_INSTALL_OPENMODELICA=/opt/OpenModelica/Install
    - DYNAWO_SRC_OPENMODELICA=/opt/OpenModelica/Source
    - DYNAWO_NB_PROCESSORS_USED=$(grep -c \^processor /proc/cpuinfo)
    - DYNAWO_RESULTS_SHOW="false"
    - DYNAWO_BUILD_TYPE=Debug
    - DYNAWO_CXX11_ENABLED=YES
    - DYNAWO_ADEPT_DOWNLOAD_URL=http://localhost:8080
    - DYNAWO_SUNDIALS_DOWNLOAD_URL=http://localhost:8080
    - DYNAWO_SUITE_SPARSE_DOWNLOAD_URL=http://localhost:8080
    - DYNAWO_JQUERY_DOWNLOAD_URL=http://localhost:8080
    - DYNAWO_FLOT_DOWNLOAD_URL=http://localhost:8080
    - DYNAWO_CPPLINT_DOWNLOAD_URL=http://localhost:8080
    - DYNAWO_XERCESC_DOWNLOAD_URL=http://localhost:8080
    - dynawo_env=$(echo -n "-e DYNAWO_HOME -e DYNAWO_INSTALL_OPENMODELICA -e DYNAWO_SRC_OPENMODELICA -e DYNAWO_NB_PROCESSORS_USED -e DYNAWO_RESULTS_SHOW -e DYNAWO_BUILD_TYPE -e DYNAWO_CXX11_ENABLED")
    - dynawo_env_url=$(echo -n "-e DYNAWO_ADEPT_DOWNLOAD_URL -e DYNAWO_SUNDIALS_DOWNLOAD_URL -e DYNAWO_SUITE_SPARSE_DOWNLOAD_URL -e DYNAWO_JQUERY_DOWNLOAD_URL -e DYNAWO_FLOT_DOWNLOAD_URL -e DYNAWO_CPPLINT_DOWNLOAD_URL -e DYNAWO_XERCESC_DOWNLOAD_URL")

install:
  - docker pull dynawo/dynawo-travis
  - docker run -itd -u dynawo_travis --name dynawo_travis_container dynawo/dynawo-travis
  - GIT_COMMAND=$(util/travis_ci/checkout_branch.sh)
  - docker exec dynawo_travis_container bash -c "$GIT_COMMAND"
  - docker exec dynawo_travis_container bash -c "cd /opt;nohup python -m SimpleHTTPServer 8080 &> /dev/null &"

script:
  - COMMAND=$(util/travis_ci/launch_command.sh)
  - echo $COMMAND
  - docker exec -e SONAR_TOKEN $dynawo_env $dynawo_env_url dynawo_travis_container bash -c "$COMMAND"

after_success:
  - if [ "$TRAVIS_BRANCH" = "master" -a "$TRAVIS_EVENT_TYPE" = "push" ]; then curl -sw '%{http_code}\n' --header "Content-Type":" application/json" -X POST --data '{"dynawo":"Update"}' https://hub.docker.com/api/build/v1/source/$DOCKER_HUB_TOKEN1/trigger/$DOCKER_HUB_TOKEN2/call/; fi
