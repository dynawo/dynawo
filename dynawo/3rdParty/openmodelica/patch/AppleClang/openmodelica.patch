# Copyright (c) 2015-2020, RTE (http://www.rte-france.com)
# Patch for OpenModelica 1.13.2 (https://www.openmodelica.org)
#
# All rights reserved.
#
# THIS PROGRAM IS PROVIDED UNDER THE TERMS OF GPL VERSION 3 LICENSE OR
# THIS OSMC PUBLIC LICENSE (OSMC-PL) VERSION 1.2.
# ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS PROGRAM CONSTITUTES RECIPIENT'S ACCEPTANCE
# OF THE OSMC PUBLIC LICENSE OR THE GPL VERSION 3, ACCORDING TO RECIPIENTS CHOICE.
#
# The OpenModelica software and the Open Source Modelica
# Consortium (OSMC) Public License (OSMC-PL) are obtained
# from OSMC, either from the above address,
# from the URLs: http://www.ida.liu.se/projects/OpenModelica or
# http://www.openmodelica.org, and in the OpenModelica distribution.
# GNU version 3 is obtained from: http://www.gnu.org/copyleft/gpl.html.
#
# This program is distributed WITHOUT ANY WARRANTY; without
# even the implied warranty of  MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE, EXCEPT AS EXPRESSLY SET FORTH
# IN THE BY RECIPIENT SELECTED SUBSIDIARY LICENSE CONDITIONS OF OSMC-PL.
#
# See the full OSMC Public License conditions for more details.
# SPDX-License-Identifier: GPL-3.0 OR LicenseRef-OSMC-PL
diff --git a/Makefile.in b/Makefile.in
index 6eccb4f6ec..8bd8253f64 100644
--- a/Makefile.in
+++ b/Makefile.in
@@ -103,7 +103,6 @@ INSTALL_LOCALEDIR  = ${DESTDIR}${datadir}/locale
 
 install-dirs:
 	@test ! "${DESTDIR}/@prefix@" -ef "@OMBUILDDIR@" || (echo Error: Install and build dirs are the same && false)
-	if [ "@APP@" = ".app" ]; then mkdir -p ${INSTALL_APPDIR}; fi
 	mkdir -p ${INSTALL_BINDIR}
 	mkdir -p ${INSTALL_LIBDIR}
 	mkdir -p ${INSTALL_INCLUDEDIR}/omc
@@ -119,7 +118,6 @@ install-dirs:
 install: install-dirs
 	echo Installing OpenModelica...
 	# Application directory (OSX)
-	if [ "@APP@" = ".app" ]; then cp -a "@OMBUILDDIR@"/Applications/* $(INSTALL_APPDIR); fi
 	# Binaries
 	cp -a "@OMBUILDDIR@"/bin/* ${INSTALL_BINDIR}
 	# Libraries
Submodule OMCompiler contains modified content
Submodule 3rdParty contains modified content
diff --git a/OMCompiler/3rdParty/FMIL/ThirdParty/Minizip/minizip/miniunz.c b/OMCompiler/3rdParty/FMIL/ThirdParty/Minizip/minizip/miniunz.c
index 19311615..ca897684 100644
--- a/OMCompiler/3rdParty/FMIL/ThirdParty/Minizip/minizip/miniunz.c
+++ b/OMCompiler/3rdParty/FMIL/ThirdParty/Minizip/minizip/miniunz.c
@@ -28,6 +28,8 @@
 #endif
 
 #ifdef __APPLE__
+#include <sys/types.h>
+#include <sys/stat.h>
 // In darwin and perhaps other BSD variants off_t is a 64 bit value, hence no need for specific 64 bit functions
 #define FOPEN_FUNC(filename, mode) fopen(filename, mode)
 #define FTELLO_FUNC(stream) ftello(stream)
@@ -107,7 +109,7 @@ void change_file_date(filename,dosdate,tmu_date)
   SetFileTime(hFile,&ftm,&ftLastAcc,&ftm);
   CloseHandle(hFile);
 #else
-#ifdef unix || __APPLE__
+#if defined(unix) || defined(__APPLE__)
   struct utimbuf ut;
   struct tm newdate;
   newdate.tm_sec = tmu_date.tm_sec;
diff --git a/OMCompiler/3rdParty/graphstream/gs-netstream/c++/src/netstream-socket.cpp b/OMCompiler/3rdParty/graphstream/gs-netstream/c++/src/netstream-socket.cpp
index c1137b48..44c80dcd 100644
--- a/OMCompiler/3rdParty/graphstream/gs-netstream/c++/src/netstream-socket.cpp
+++ b/OMCompiler/3rdParty/graphstream/gs-netstream/c++/src/netstream-socket.cpp
@@ -257,7 +257,7 @@ namespace netstream
 			self.sin_addr.s_addr = htonl(INADDR_ANY);
 
 			// Assign a port number to the socket
-			if ( bind(server_socket_, (struct sockaddr*)&self, sizeof(self)) != 0 )
+			if ( ::bind(server_socket_, (struct sockaddr*)&self, sizeof(self)) != 0 )
 				BailOnNetStreamSocketError("netstream::NetStreamSocket::accept() Unable to create listening socket");
 
 
diff --git a/OMCompiler/3rdParty/lpsolve/Makefile.in b/OMCompiler/3rdParty/lpsolve/Makefile.in
index 72f2cb48..ebaa0e59 100644
--- a/OMCompiler/3rdParty/lpsolve/Makefile.in
+++ b/OMCompiler/3rdParty/lpsolve/Makefile.in
@@ -101,7 +101,7 @@ liblpsolve55.a: $(SOURCES)
 
 liblpsolve55@SO@: $(SOURCES)
 	$(CC) $(CCSHARED) -s -c $(INCLUDES) $(CFLAGS) $(DEFINES) $(SOURCES)
-	$(CC) -shared -Wl,-Bsymbolic -Wl,-soname,$@ -o $@ `echo $(SOURCES)|sed s/[.]c/.o/g|sed 's/[^ ]*\///g'` $(LIBS)
+	$(CC) -shared `echo @SO@ | grep -q dylib || echo -Wl,-Bsymbolic -Wl,-soname,$@` -o $@ `echo $(SOURCES)|sed s/[.]c/.o/g|sed 's/[^ ]*\///g'` $(LIBS)
 
 install: install-HEADERS install-LIBRARIES
 
diff --git a/OMCompiler/3rdParty/lpsolve/configure.ac b/OMCompiler/3rdParty/lpsolve/configure.ac
index 8ce3276c..14b6c33a 100644
--- a/OMCompiler/3rdParty/lpsolve/configure.ac
+++ b/OMCompiler/3rdParty/lpsolve/configure.ac
@@ -5,6 +5,7 @@ AC_CANONICAL_HOST
 
 SHARED_LIB=liblpsolve55.so
 SO=.so
+
 case $host_os in
   hp*|HP*)
     DEF=-ldld
@@ -25,7 +26,11 @@ case $host_os in
   linux)
     CCSHARED="-fPIC";;
   apple-darwin)
-    DEF=-ldl -idirafter /usr/include/sys -DINTEGERTIME -Wno-long-double
+    DEF="-ldl -idirafter /usr/include/sys -DINTEGERTIME -Wno-long-double"
+    ;;
+  *darwin*)
+    SO=.dylib
+    SHARED_LIB=liblpsolve55.dylib
     ;;
   OpenUNIX*|UnixWare*)
     DEF='-dy -DNOLONGLONG'
diff --git a/OMCompiler/3rdParty/open62541/open62541.c b/OMCompiler/3rdParty/open62541/open62541.c
index ed501f0e..07ba66d3 100644
--- a/OMCompiler/3rdParty/open62541/open62541.c
+++ b/OMCompiler/3rdParty/open62541/open62541.c
@@ -19,6 +19,14 @@
 # define UA_DYNAMIC_LINKING_EXPORT
 #endif
 
+#if defined(__FreeBSD__) || defined(__APPLE__)
+/* Otherwise the order of includes messes something up in FreeBSD.
+ * If Linux includes unistd.h at the top, it fails to compile though.
+ */
+#include <unistd.h>
+#include <stdio.h>
+#endif
+
 #include "open62541.h"
 
 /*********************************** amalgamated original file "/home/marsj/dev/open62541/deps/queue.h" ***********************************/
diff --git a/OMCompiler/Makefile.common b/OMCompiler/Makefile.common
index 9144cafe4..e0a6a3297 100644
--- a/OMCompiler/Makefile.common
+++ b/OMCompiler/Makefile.common
@@ -476,6 +476,7 @@ $(builddir_lib_omc)/liblpsolve55.a: 3rdParty/lpsolve/Makefile
 	$(MAKE) -C 3rdParty/lpsolve/ install CC="$(CC)" CXX="$(CXX)" CFLAGS="$(CFLAGS)" CPPFLAGS="$(CPPFLAGS)" -j1
 	cp -pf 3rdParty/lpsolve/build/lib/liblpsolve55* $(builddir_lib_omc)
 	cp -prf 3rdParty/lpsolve/build/include/* $(builddir_inc)/
+	test ! `uname` = Darwin || install_name_tool -id @rpath/liblpsolve55.dylib "$(builddir_lib_omc)/liblpsolve55.dylib"
 3rdParty/lpsolve/Makefile: 3rdParty/lpsolve/configure.ac
 	(cd 3rdParty/lpsolve && autoreconf -vif && ./configure --prefix="`pwd`/build" "--host=$(host)" CC="$(CC)" CXX="$(CXX)" CFLAGS="$(CFLAGS)" CPPFLAGS="$(CPPFLAGS)")
 clean-lpsolve:
diff --git a/OMCompiler/configure.ac b/OMCompiler/configure.ac
index 515d50606..2eeeff2df 100644
--- a/OMCompiler/configure.ac
+++ b/OMCompiler/configure.ac
@@ -288,7 +288,7 @@ else # Is Darwin
 
 AC_LANG_PUSH([C++])
 OLD_CXXFLAGS=$CXXFLAGS
-for flag in -stdlib=libstdc++; do
+for flag in -stdlib=libc++; do
   CXXFLAGS="$OLD_CXXFLAGS $flag"
   AC_TRY_LINK([], [return 0;], [LDFLAGS_LIBSTDCXX="$flag"],[CXXFLAGS="$OLD_CXXFLAGS"])
 done
@@ -573,29 +573,51 @@ SUNDIALS_LDFLAGS="-lsundials_idas -lsundials_kinsol -lsundials_nvecserial $LD_LA
 FINAL_MESSAGES="$FINAL_MESSAGES\nSimulations may use sundials suite: Yes"
 SUNDIALS_TARGET="sundials"
 
-AC_CHECK_HEADERS(locale.h libintl.h,[
-AC_MSG_CHECKING([gettext linking])
-AC_TRY_LINK([
-#include <libintl.h>
-], [
+AC_CHECK_HEADERS(locale.h libintl.h,[],[HAVE_GETTEXT="#define NO_GETTEXT 1"])
+
+if test -z "$HAVE_GETTEXT"; then
+  AC_MSG_CHECKING([gettext linking])
+
+  AC_TRY_LINK([
+    #include <libintl.h>
+  ], [
   gettext("");
-], [AC_MSG_RESULT([in C-library])],
+  ], [AC_MSG_RESULT([in C-library])],
   [
-  LIBS="-lintl";
+    LIBS="-lintl";
+    AC_TRY_LINK([
+      #include <libintl.h>
+    ], [
+      gettext("");
+    ], [AC_MSG_RESULT([in intl]); GETTEXT_LIBS="-lintl"], [HAVE_GETTEXT="#define NO_GETTEXT 1"])
+  ])
+
+  LIBS=""
+
+  if test -z "$HAVE_GETTEXT$GETTEXT_LIBS"; then
+
+  AC_MSG_CHECKING([setlocale linking])
+
   AC_TRY_LINK([
     #include <libintl.h>
   ], [
-      gettext("");
-  ], [AC_MSG_RESULT([in intl]);RT_LDFLAGS_OPTIONAL="$RT_LDFLAGS_OPTIONAL $LIBS"],
-      [
-        HAVE_GETTEXT="#define NO_GETTEXT 1"
-        AC_MSG_RESULT([no])
-      ])
-])
-],[
-  HAVE_GETTEXT="#define NO_GETTEXT 1"
-  AC_MSG_RESULT([gettext headers not found])
-])
+    setlocale(LC_ALL, "");
+  ], [AC_MSG_RESULT([in C-library])],
+  [
+    LIBS="-lintl";
+    AC_TRY_LINK([
+      #include <libintl.h>
+    ], [
+      setlocale(LC_ALL, "");
+    ], [AC_MSG_RESULT([in intl]); GETTEXT_LIBS="-lintl"], [AC_MSG_RESULT([no]); HAVE_GETTEXT="#define NO_GETTEXT 1"])
+  ])
+
+  fi
+
+  if test -z "$HAVE_GETTEXT"; then
+    RT_LDFLAGS_OPTIONAL="$RT_LDFLAGS_OPTIONAL $GETTEXT_LIBS"
+  fi
+fi
 
 LIBS=""
 AC_CHECK_HEADERS(hwloc.h,
@@ -684,7 +706,7 @@ if test "$DARWIN" = "1"; then
   RT_LDFLAGS_GENERATED_CODE_SIM="$LDFLAGS -lSimulationRuntimeC $LD_LAPACK -lm -lomcgc"
   RT_LDFLAGS_GENERATED_CODE_SOURCE_FMU="$LDFLAGS $LD_LAPACK -lm$LD_NOUNDEFINED"
   RT_LDFLAGS_SHARED=
-  OMCRUNTIME_SHARED_LDFLAGS="$RT_LDFLAGS -Wl,-undefined -Wl,dynamic_lookup $LIBLPSOLVE55 -lzmq $LIBUUID"
+  OMCRUNTIME_SHARED_LDFLAGS="$RT_LDFLAGS -Wl,-undefined -Wl,dynamic_lookup $LIBLPSOLVE55 -lzmq $LIBUUID $RT_LDFLAGS_OPTIONAL"
   LINK="cp -fr"
   RPATH="-Wl,-rpath,'@loader_path/../lib/$host_short/omc/'"
   RPATH_QMAKE="-Wl,-rpath,'@loader_path/../../../../lib/$host_short/omc',-rpath,'@loader_path/../../../../lib/',-rpath,'$PREFIX/lib/$host_short/omc',-rpath,'$PREFIX/lib/'"
