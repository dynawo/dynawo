
#ifndef MACHINE_PQ__Init_Definitions_h
#define MACHINE_PQ__Init_Definitions_h

namespace DYN {
  // variables definition
//
// Copyright (c) 2015-2019, RTE (http://www.rte-france.com)
// See AUTHORS.txt
// All rights reserved.
// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, you can obtain one at http://mozilla.org/MPL/2.0/.
// SPDX-License-Identifier: MPL-2.0
//
// This file is part of Dynawo, an hybrid C++/Modelica open source time domain
// simulation tool for power systems.
//

/* Simulation code for MACHINE_PQ_INIT generated by the OpenModelica Compiler OMCompiler v1.9.4. */
/* StatesDerivatives */

/* States */

/* Non Discrete Real Algebraic Vars */
/* MACHINE.PGen0Pu */
#define _$PMACHINE$PPGen0Pu(i) data->localData[i]->realVars[0]
#define $PMACHINE$PPGen0Pu _$PMACHINE$PPGen0Pu(0)
#define $P$PRE$PMACHINE$PPGen0Pu data->simulationInfo->realVarsPre[0]
#define $P$ATTRIBUTE$PMACHINE$PPGen0Pu data->modelData->realVarsData[0].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$PPGen0Pu $P$ATTRIBUTE$PMACHINE$PPGen0Pu
#define $PMACHINE$PPGen0Pu__varInfo data->modelData->realVarsData[0].info
#define $P$PRE$PMACHINE$PPGen0Pu__varInfo data->modelData->realVarsData[0].info
#define _$P$PRE$PMACHINE$PPGen0Pu(i) $P$PRE$PMACHINE$PPGen0Pu


/* MACHINE.QGen0Pu */
#define _$PMACHINE$PQGen0Pu(i) data->localData[i]->realVars[1]
#define $PMACHINE$PQGen0Pu _$PMACHINE$PQGen0Pu(0)
#define $P$PRE$PMACHINE$PQGen0Pu data->simulationInfo->realVarsPre[1]
#define $P$ATTRIBUTE$PMACHINE$PQGen0Pu data->modelData->realVarsData[1].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$PQGen0Pu $P$ATTRIBUTE$PMACHINE$PQGen0Pu
#define $PMACHINE$PQGen0Pu__varInfo data->modelData->realVarsData[1].info
#define $P$PRE$PMACHINE$PQGen0Pu__varInfo data->modelData->realVarsData[1].info
#define _$P$PRE$PMACHINE$PQGen0Pu(i) $P$PRE$PMACHINE$PQGen0Pu


/* MACHINE.i0Pu.im */
#define _$PMACHINE$Pi0Pu$Pim(i) data->localData[i]->realVars[2]
#define $PMACHINE$Pi0Pu$Pim _$PMACHINE$Pi0Pu$Pim(0)
#define $P$PRE$PMACHINE$Pi0Pu$Pim data->simulationInfo->realVarsPre[2]
#define $P$ATTRIBUTE$PMACHINE$Pi0Pu$Pim data->modelData->realVarsData[2].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$Pi0Pu$Pim $P$ATTRIBUTE$PMACHINE$Pi0Pu$Pim
#define $PMACHINE$Pi0Pu$Pim__varInfo data->modelData->realVarsData[2].info
#define $P$PRE$PMACHINE$Pi0Pu$Pim__varInfo data->modelData->realVarsData[2].info
#define _$P$PRE$PMACHINE$Pi0Pu$Pim(i) $P$PRE$PMACHINE$Pi0Pu$Pim


/* MACHINE.i0Pu.re */
#define _$PMACHINE$Pi0Pu$Pre(i) data->localData[i]->realVars[3]
#define $PMACHINE$Pi0Pu$Pre _$PMACHINE$Pi0Pu$Pre(0)
#define $P$PRE$PMACHINE$Pi0Pu$Pre data->simulationInfo->realVarsPre[3]
#define $P$ATTRIBUTE$PMACHINE$Pi0Pu$Pre data->modelData->realVarsData[3].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$Pi0Pu$Pre $P$ATTRIBUTE$PMACHINE$Pi0Pu$Pre
#define $PMACHINE$Pi0Pu$Pre__varInfo data->modelData->realVarsData[3].info
#define $P$PRE$PMACHINE$Pi0Pu$Pre__varInfo data->modelData->realVarsData[3].info
#define _$P$PRE$PMACHINE$Pi0Pu$Pre(i) $P$PRE$PMACHINE$Pi0Pu$Pre


/* MACHINE.s0Pu.im */
#define _$PMACHINE$Ps0Pu$Pim(i) data->localData[i]->realVars[4]
#define $PMACHINE$Ps0Pu$Pim _$PMACHINE$Ps0Pu$Pim(0)
#define $P$PRE$PMACHINE$Ps0Pu$Pim data->simulationInfo->realVarsPre[4]
#define $P$ATTRIBUTE$PMACHINE$Ps0Pu$Pim data->modelData->realVarsData[4].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$Ps0Pu$Pim $P$ATTRIBUTE$PMACHINE$Ps0Pu$Pim
#define $PMACHINE$Ps0Pu$Pim__varInfo data->modelData->realVarsData[4].info
#define $P$PRE$PMACHINE$Ps0Pu$Pim__varInfo data->modelData->realVarsData[4].info
#define _$P$PRE$PMACHINE$Ps0Pu$Pim(i) $P$PRE$PMACHINE$Ps0Pu$Pim


/* MACHINE.s0Pu.re */
#define _$PMACHINE$Ps0Pu$Pre(i) data->localData[i]->realVars[5]
#define $PMACHINE$Ps0Pu$Pre _$PMACHINE$Ps0Pu$Pre(0)
#define $P$PRE$PMACHINE$Ps0Pu$Pre data->simulationInfo->realVarsPre[5]
#define $P$ATTRIBUTE$PMACHINE$Ps0Pu$Pre data->modelData->realVarsData[5].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$Ps0Pu$Pre $P$ATTRIBUTE$PMACHINE$Ps0Pu$Pre
#define $PMACHINE$Ps0Pu$Pre__varInfo data->modelData->realVarsData[5].info
#define $P$PRE$PMACHINE$Ps0Pu$Pre__varInfo data->modelData->realVarsData[5].info
#define _$P$PRE$PMACHINE$Ps0Pu$Pre(i) $P$PRE$PMACHINE$Ps0Pu$Pre


/* MACHINE.u0Pu.im */
#define _$PMACHINE$Pu0Pu$Pim(i) data->localData[i]->realVars[6]
#define $PMACHINE$Pu0Pu$Pim _$PMACHINE$Pu0Pu$Pim(0)
#define $P$PRE$PMACHINE$Pu0Pu$Pim data->simulationInfo->realVarsPre[6]
#define $P$ATTRIBUTE$PMACHINE$Pu0Pu$Pim data->modelData->realVarsData[6].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$Pu0Pu$Pim $P$ATTRIBUTE$PMACHINE$Pu0Pu$Pim
#define $PMACHINE$Pu0Pu$Pim__varInfo data->modelData->realVarsData[6].info
#define $P$PRE$PMACHINE$Pu0Pu$Pim__varInfo data->modelData->realVarsData[6].info
#define _$P$PRE$PMACHINE$Pu0Pu$Pim(i) $P$PRE$PMACHINE$Pu0Pu$Pim


/* MACHINE.u0Pu.re */
#define _$PMACHINE$Pu0Pu$Pre(i) data->localData[i]->realVars[7]
#define $PMACHINE$Pu0Pu$Pre _$PMACHINE$Pu0Pu$Pre(0)
#define $P$PRE$PMACHINE$Pu0Pu$Pre data->simulationInfo->realVarsPre[7]
#define $P$ATTRIBUTE$PMACHINE$Pu0Pu$Pre data->modelData->realVarsData[7].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$Pu0Pu$Pre $P$ATTRIBUTE$PMACHINE$Pu0Pu$Pre
#define $PMACHINE$Pu0Pu$Pre__varInfo data->modelData->realVarsData[7].info
#define $P$PRE$PMACHINE$Pu0Pu$Pre__varInfo data->modelData->realVarsData[7].info
#define _$P$PRE$PMACHINE$Pu0Pu$Pre(i) $P$PRE$PMACHINE$Pu0Pu$Pre


/* Nonlinear Constraints For Dyn. Optimization */

/* Nonlinear Final Constraints For Dyn. Optimization */

/* Discrete Real Algebraic Vars */

/* Algebraic Integer Vars */

/* Algebraic Parameter */
/* MACHINE.P0Pu */
#define $PMACHINE$PP0Pu data->simulationInfo->realParameter[0]
#define _$PMACHINE$PP0Pu(i) $PMACHINE$PP0Pu
#define $P$ATTRIBUTE$PMACHINE$PP0Pu data->modelData->realParameterData[0].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$PP0Pu $P$ATTRIBUTE$PMACHINE$PP0Pu
#define $PMACHINE$PP0Pu__varInfo data->modelData->realParameterData[0].info


/* MACHINE.Q0Pu */
#define $PMACHINE$PQ0Pu data->simulationInfo->realParameter[1]
#define _$PMACHINE$PQ0Pu(i) $PMACHINE$PQ0Pu
#define $P$ATTRIBUTE$PMACHINE$PQ0Pu data->modelData->realParameterData[1].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$PQ0Pu $P$ATTRIBUTE$PMACHINE$PQ0Pu
#define $PMACHINE$PQ0Pu__varInfo data->modelData->realParameterData[1].info


/* MACHINE.U0Pu */
#define $PMACHINE$PU0Pu data->simulationInfo->realParameter[2]
#define _$PMACHINE$PU0Pu(i) $PMACHINE$PU0Pu
#define $P$ATTRIBUTE$PMACHINE$PU0Pu data->modelData->realParameterData[2].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$PU0Pu $P$ATTRIBUTE$PMACHINE$PU0Pu
#define $PMACHINE$PU0Pu__varInfo data->modelData->realParameterData[2].info


/* MACHINE.UPhase0 */
#define $PMACHINE$PUPhase0 data->simulationInfo->realParameter[3]
#define _$PMACHINE$PUPhase0(i) $PMACHINE$PUPhase0
#define $P$ATTRIBUTE$PMACHINE$PUPhase0 data->modelData->realParameterData[3].attribute
#define $P$ATTRIBUTE$P$PRE$PMACHINE$PUPhase0 $P$ATTRIBUTE$PMACHINE$PUPhase0
#define $PMACHINE$PUPhase0__varInfo data->modelData->realParameterData[3].info


/* External Objects */

/* Algebraic Integer Parameter */

/* Algebraic Boolean Vars */

/* Algebraic Boolean Parameters */

/* Algebraic String Variables */

/* Algebraic String Parameter */

/* sample */

#define Dynawo_Types_AC_ApparentPower_index 0
#define Complex_index 1
#define Dynawo_Types_AC_Current_index 2
#define Dynawo_Types_AC_Voltage_index 3

extern void MACHINE_PQ_INIT_callExternalObjectConstructors(DATA *data, threadData_t *threadData);
extern void MACHINE_PQ_INIT_callExternalObjectDestructors(DATA *_data, threadData_t *threadData);
extern void MACHINE_PQ_INIT_initialNonLinearSystem(int nNonLinearSystems, NONLINEAR_SYSTEM_DATA *data);
extern void MACHINE_PQ_INIT_initialLinearSystem(int nLinearSystems, LINEAR_SYSTEM_DATA *data);
extern void MACHINE_PQ_INIT_initialMixedSystem(int nMixedSystems, MIXED_SYSTEM_DATA *data);
extern void MACHINE_PQ_INIT_initializeStateSets(int nStateSets, STATE_SET_DATA* statesetData, DATA *data);
extern int MACHINE_PQ_INIT_functionAlgebraics(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_function_storeDelayed(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_updateBoundVariableAttributes(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_functionInitialEquations(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_functionInitialEquations_lambda0(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_functionRemovedInitialEquations(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_updateBoundParameters(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_checkForAsserts(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_function_ZeroCrossingsEquations(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_function_ZeroCrossings(DATA *data, threadData_t *threadData, double* gout);
extern int MACHINE_PQ_INIT_function_updateRelations(DATA *data, threadData_t *threadData, int evalZeroCross);
extern int MACHINE_PQ_INIT_checkForDiscreteChanges(DATA *data, threadData_t *threadData);
extern const char* MACHINE_PQ_INIT_zeroCrossingDescription(int i, int **out_EquationIndexes);
extern const char* MACHINE_PQ_INIT_relationDescription(int i);
extern void MACHINE_PQ_INIT_function_initSample(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_initialAnalyticJacobianG(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_initialAnalyticJacobianA(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_initialAnalyticJacobianB(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_initialAnalyticJacobianC(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_initialAnalyticJacobianD(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_functionJacG_column(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_functionJacA_column(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_functionJacB_column(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_functionJacC_column(void* data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_functionJacD_column(void* data, threadData_t *threadData);
extern const char* MACHINE_PQ_INIT_linear_model_frame(void);
extern int MACHINE_PQ_INIT_mayer(DATA* data, modelica_real** res, short *);
extern int MACHINE_PQ_INIT_lagrange(DATA* data, modelica_real** res, short *, short *);
extern int MACHINE_PQ_INIT_pickUpBoundsForInputsInOptimization(DATA* data, modelica_real* min, modelica_real* max, modelica_real*nominal, modelica_boolean *useNominal, char ** name, modelica_real * start, modelica_real * startTimeOpt);
extern int MACHINE_PQ_INIT_setInputData(DATA *data, const modelica_boolean file);
extern int MACHINE_PQ_INIT_getTimeGrid(DATA *data, modelica_integer * nsi, modelica_real**t);
extern void MACHINE_PQ_INIT_function_initSynchronous(DATA * data, threadData_t *threadData);
extern void MACHINE_PQ_INIT_function_updateSynchronous(DATA * data, threadData_t *threadData, long i);
extern int MACHINE_PQ_INIT_function_equationsSynchronous(DATA * data, threadData_t *threadData, long i);
extern void MACHINE_PQ_INIT_read_input_fmu(MODEL_DATA* modelData, SIMULATION_INFO* simulationData);
extern void MACHINE_PQ_INIT_function_savePreSynchronous(DATA *data, threadData_t *threadData);
extern int MACHINE_PQ_INIT_inputNames(DATA* data, char ** names);

}//end namespace DYN

#endif

