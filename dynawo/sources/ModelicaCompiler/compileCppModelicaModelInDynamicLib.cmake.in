# Copyright (c) 2015-2019, RTE (http://www.rte-france.com)
# See AUTHORS.txt
# All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at http://mozilla.org/MPL/2.0/.
# SPDX-License-Identifier: MPL-2.0
#
# This file is part of Dynawo, an hybrid C++/Modelica open source time domain simulation tool for power systems.

cmake_minimum_required(VERSION 3.9.6)

PROJECT(model CXX)

SET(DYNAWO_LIBRARY_TYPE "@LIBRARY_TYPE@")
SET(DYNAWO_MSVC_STATIC_RUNTIME_LIBRARY "@MSVC_STATIC_RUNTIME_LIBRARY@")

if(NOT DEFINED ENV{DYNAWO_INSTALL_DIR})
  MESSAGE(FATAL_ERROR "You need to define DYNAWO_INSTALL_DIR environment variable.")
endif()

if(NOT DEFINED ENV{DYNAWO_ADEPT_INSTALL_DIR})
  MESSAGE(FATAL_ERROR "You need to define DYNAWO_ADEPT_INSTALL_DIR environment variable.")
endif()

if(NOT DEFINED ENV{DYNAWO_INSTALL_OPENMODELICA})
  MESSAGE(FATAL_ERROR "You need to define DYNAWO_INSTALL_OPENMODELICA environment variable.")
endif()

if(NOT DEFINED ENV{DYNAWO_XERCESC_INSTALL_DIR})
  MESSAGE(FATAL_ERROR "You need to define DYNAWO_XERCESC_INSTALL_DIR environment variable.")
endif()

if(NOT DEFINED ENV{DYNAWO_LIBXML_HOME})
  MESSAGE(FATAL_ERROR "You need to define DYNAWO_LIBXML_HOME environment variable.")
endif()

if(NOT DEFINED ENV{DYNAWO_SUITESPARSE_INSTALL_DIR})
  MESSAGE(FATAL_ERROR "You need to define DYNAWO_SUITESPARSE_INSTALL_DIR environment variable.")
endif()

if(NOT DEFINED ENV{DYNAWO_SUNDIALS_INSTALL_DIR})
  MESSAGE(FATAL_ERROR "You need to define DYNAWO_SUNDIALS_INSTALL_DIR environment variable.")
endif()

if(DEFINED ENV{DYNAWO_BOOST_HOME})
  set(BOOST_ROOT $ENV{DYNAWO_BOOST_HOME})
endif()

file(TO_CMAKE_PATH  "$ENV{DYNAWO_INSTALL_DIR}" DYNAWO_INSTALL_DIR)
SET(CMAKE_MODULE_PATH "${DYNAWO_INSTALL_DIR}/share/cmake")

if(MSVC)
  if(DYNAWO_LIBRARY_TYPE STREQUAL "STATIC")
    if(DYNAWO_MSVC_STATIC_RUNTIME_LIBRARY)
      set(CMAKE_MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
    endif()
  endif()
endif()

SET(CMAKE_BUILD_TYPE "@CMAKE_BUILD_TYPE@" CACHE STRING "Choose the type of build, options are: Debug Release RelWithDebInfo MinSizeRel." FORCE)
SET(CMAKE_CXX_FLAGS "@CMAKE_CXX_FLAGS@")

IF(NOT MODEL_NAME OR "${MODEL_NAME}" STREQUAL "")
  MESSAGE(FATAL_ERROR "Need a model name to compile: please add -DMODEL_NAME=...")
ENDIF()

IF(MSVC)
  SET(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
  ADD_DEFINITIONS(-D_CRT_SECURE_NO_WARNINGS -D_SCL_SECURE_NO_WARNINGS)
  ADD_DEFINITIONS(-DLANG_CXX11)

  FIND_PACKAGE(dlfcn-win32 REQUIRED)
ENDIF()

set(BOOST_ROOT_DEFAULT "@BOOST_ROOT_DEFAULT@")
set(BOOST_USE_STATIC "@BOOST_USE_STATIC@")

# Boost
IF(BOOST_ROOT_DEFAULT STREQUAL "true")
  SET(Boost_NO_SYSTEM_PATHS FALSE)
ELSE()
  SET(Boost_NO_SYSTEM_PATHS TRUE)
ENDIF()

IF(BOOST_USE_STATIC)
  SET(Boost_USE_STATIC_LIBS TRUE)
ELSE()
  set(BUILD_SHARED_LIBS ON)
  ADD_DEFINITIONS(-DBOOST_ALL_DYN_LINK)
ENDIF()
# Tell BOOST to disable auto linking
ADD_DEFINITIONS(-DBOOST_ALL_NO_LIB)

FIND_PACKAGE(Boost 1.64 REQUIRED
  COMPONENTS
    filesystem
    program_options
    serialization
    system
    log
)

SET(SUITESPARSE_HOME "$ENV{DYNAWO_SUITESPARSE_INSTALL_DIR}")
FIND_PACKAGE(SuiteSparse REQUIRED)

SET(SUNDIALS_HOME "$ENV{DYNAWO_SUNDIALS_INSTALL_DIR}")
FIND_PACKAGE(Sundials REQUIRED)

SET(USE_ADEPT "@USE_ADEPT@")
SET(ADEPT_HOME "$ENV{DYNAWO_ADEPT_INSTALL_DIR}")
IF(USE_ADEPT)
  FIND_PACKAGE(Adept REQUIRED)
ENDIF(USE_ADEPT)

SET(XERCESC_HOME "$ENV{DYNAWO_XERCESC_INSTALL_DIR}")
FIND_PACKAGE(XercesC 3.2.2 REQUIRED)

SET(LibXML_USE_STATIC_LIBS @LibXML_USE_STATIC_LIBS@)
FIND_PACKAGE(libXML 0.2.4 REQUIRED PATHS $ENV{DYNAWO_LIBXML_HOME})

FIND_PACKAGE(Dynawo CONFIG REQUIRED PATHS $ENV{DYNAWO_INSTALL_DIR} PATH_SUFFIXES share)

SET(MODEL_SOURCES
  ${MODEL_NAME}.cpp
  ${MODEL_NAME}_Dyn.cpp
  ${MODEL_NAME}_Dyn_external.cpp
  )

IF(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/${MODEL_NAME}_Init.cpp)
  LIST(APPEND MODEL_SOURCES
    ${MODEL_NAME}_Init.cpp
    ${MODEL_NAME}_Init_external.cpp
    )
ENDIF()

ADD_LIBRARY(lib SHARED ${MODEL_SOURCES})
SET_TARGET_PROPERTIES(lib PROPERTIES OUTPUT_NAME ${MODEL_NAME} PREFIX "")

GET_FILENAME_COMPONENT(INSTALL_OPENMODELICA $ENV{DYNAWO_INSTALL_OPENMODELICA} ABSOLUTE)
SET(OMC_INCLUDE_DIR ${INSTALL_OPENMODELICA}/include/omc/c)

IF(NOT EXISTS ${OMC_INCLUDE_DIR})
  message(FATAL_ERROR "OpenModelica include directories, ${OMC_INCLUDE_DIR}, does not exist. Use DYNAWO_INSTALL_OPENMODELICA environement variable to your installation.")
ENDIF()

TARGET_INCLUDE_DIRECTORIES(lib PUBLIC $ENV{DYNAWO_ADDITIONAL_INCLUDE_FOR_PREASSEMBLED} PRIVATE ${OMC_INCLUDE_DIR} ${ADEPT_INCLUDE_DIR})

TARGET_LINK_LIBRARIES(lib
  Dynawo::dynawo_ModelManager
  $ENV{DYNAWO_ADDITIONAL_LIBRARY_FOR_PREASSEMBLED}
)
