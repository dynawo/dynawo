#
# Copyright (c) 2022, RTE (http://www.rte-france.com)
# See AUTHORS.txt
# All rights reserved.
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, you can obtain one at http://mozilla.org/MPL/2.0/.
# SPDX-License-Identifier: MPL-2.0
#
# This file is part of Dynawo, an hybrid C++/Modelica open source suite of simulation tools for power systems.

function(add_dependencies_if_exists DEPENDENCY_TARGET_NAME TARGET_NAME)
  if(TARGET ${TARGET_NAME})
    add_dependencies(${DEPENDENCY_TARGET_NAME} ${TARGET_NAME})
  else()
    message(STATUS "Target '${TARGET_NAME}' does not exist. Skipping dependencies.")
  endif()
endfunction()

function(add_dependencies_if_exists_list DEPENDENCY_TARGET_NAME)
  set(TARGET_LIST ${ARGN})
  foreach(TARGET ${TARGET_LIST})
    add_dependencies_if_exists(${DEPENDENCY_TARGET_NAME} ${TARGET})
  endforeach()
endfunction()

# Define utility targets

## Generics

file(GLOB Automatons *Automaton*.xml)
file(GLOB Basics SetPoint.xml Step.xml DoubleStep.xml)
file(GLOB Bus Bus.xml)
file(GLOB Events Event*.xml)
file(GLOB Generators Generator*.xml)
file(GLOB SynchronousGenerators GeneratorSynchronous*.xml)
file(GLOB GridForming GridForming*.xml)
file(GLOB Hvdcs Hvdc*.xml *HVDC*.xml)
file(GLOB InfiniteBus InfiniteBus*.xml)
file(GLOB Line Line.xml)
file(GLOB Loads Load*.xml)
file(GLOB Fault NodeFault.xml)
file(GLOB PhaseShifters PhaseShifter*.xml)
file(GLOB Renewable WT*.xml Photovoltaics*.xml)
file(GLOB Shunts Shunt*.xml)
file(GLOB SVarc StaticVarCompensator*.xml)
file(GLOB TapChangers TapChanger*.xml)
file(GLOB Transformer TransformerFixedRatio.xml)
file(GLOB SecondaryControl Secondary*.xml)
file(GLOB IEC IEC*.xml)

## Generators
add_custom_target(GENERATOR_MODELS)

foreach(generator IN LISTS Generators)
  get_filename_component(name ${generator} NAME_WE)
  add_dependencies_if_exists(GENERATOR_MODELS ${name})
endforeach()

## Synchronous Generators
add_custom_target(SYNCHRONOUS_GENERATOR_MODELS)

foreach(generator IN LISTS SynchronousGenerators)
  get_filename_component(name ${generator} NAME_WE)
  add_dependencies_if_exists(SYNCHRONOUS_GENERATOR_MODELS ${name})
endforeach()

## Loads
add_custom_target(LOAD_MODELS)

foreach(load IN LISTS Loads)
  get_filename_component(name ${load} NAME_WE)
  add_dependencies_if_exists(LOAD_MODELS ${name})
endforeach()

## IEC
add_custom_target(IEC_MODELS)

foreach(iec IN LISTS IEC)
  get_filename_component(name ${iec} NAME_WE)
  add_dependencies_if_exists(IEC_MODELS ${name})
endforeach()

## SMIB

add_custom_target(SMIB_MODELS)
add_dependencies_if_exists_list(SMIB_MODELS InfiniteBus Bus Line TransformerFixedRatio SetPoint NodeFault EventSetPointBoolean Step LoadAlphaBeta)

add_custom_target(SMIB_MODELS_GENERATORS)
add_dependencies_if_exists_list(SMIB_MODELS_GENERATORS GeneratorSynchronousFourWindingsProportionalRegulations GeneratorSynchronousThreeWindingsGoverNordicVRNordic GeneratorSynchronousFourWindingsPmConstVRNordic GeneratorSynchronousThreeWindingsPmConstVRNordic GeneratorSynchronousFourWindingsGovSteam1St4b GeneratorSynchronousFourWindingsGovSteam1St4bPss2b)

## DYNAFLOW

file(GLOB DynaFlowAutomatons CurrentLimitAutomaton.xml PIAntiWindUpTable.xml WeightedDifference.xml)
file(GLOB DynaFlowGenerators *SignalN*.xml VRRemote.xml)
file(GLOB DynaFlowLoads LoadPQ.xml LoadAlphaBetaRestorative.xml LoadAlphaBeta.xml)
file(GLOB DynaFlowHvdc HvdcP*.xml PowerTransferHVDCEmulation.xml)
file(GLOB DynaFlowSVarc StaticVarCompensatorPV*.xml)

add_custom_target(DYNAFLOW_MODELS)
foreach(item IN LISTS Basics DynaFlowAutomatons DynaFlowGenerators DynaFlowHvdc DynaFlowLoads DynaFlowSVarc Events InfiniteBus Line PhaseShifters Shunts SecondaryControl)
  get_filename_component(name ${item} NAME_WE)
  add_dependencies_if_exists(DYNAFLOW_MODELS ${name})
endforeach()

## DYNASWING

file(GLOB DynaSwingGenerators GeneratorSynchronous*.xml)
file(GLOB DynaSwingHvdcs HvdcVsc*.xml)
file(GLOB DynaSwingSVarC StaticVarCompensator.xml StaticVarCompensatorStepURef.xml)
add_custom_target(DYNASWING_MODELS)
foreach(item IN LISTS Basics Bus DynaSwingGenerators Events Fault Line Loads GridForming DynaSwingHvdcs InfiniteBus DynaSwingSVarC Renewable Transformer)
  get_filename_component(name ${item} NAME_WE)
  add_dependencies_if_exists(DYNASWING_MODELS ${name})
endforeach()

## DynaWaltz
add_custom_target(DYNAWALTZ_MODELS)
file(STRINGS "DynaWaltzModels.txt" DYNAWALTZ_MODELS_LIST)
foreach(dynawaltz_model IN LISTS DYNAWALTZ_MODELS_LIST)
  add_dependencies_if_exists(DYNAWALTZ_MODELS ${dynawaltz_model})
endforeach()

## Nrt models
add_custom_target(NRT_MODELS)
file(STRINGS "NrtModels.txt" NRT_MODELS_LIST)
foreach(nrt_model IN LISTS NRT_MODELS_LIST)
  #add_dependencies_if_exists(NRT_MODELS ${nrt_model})
endforeach()

## Nrt-extend models
add_custom_target(NRT_EXTEND_MODELS)
file(STRINGS "NrtExtendModels.txt" NRT_EXTEND_MODELS_LIST)
foreach(nrt_extend_model IN LISTS NRT_EXTEND_MODELS_LIST)
  #add_dependencies_if_exists(NRT_EXTEND_MODELS ${nrt_extend_model})
endforeach()
