name: CI

on: [push]

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      DYNAWO_BUILD_TYPE: Debug
      DYNAWO_RESULTS_SHOW: "false"
      DYNAWO_INSTALL_OPENMODELICA: ${{ github.workspace }}/OpenModelica/Install
      DYNAWO_SRC_OPENMODELICA: ${{ github.workspace }}/OpenModelica/Source
      DYNAWO_CMAKE_GENERATOR: Ninja
      DYNAWO_NB_PROCESSORS_USED: 2
    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install packages
        run: |
          sudo apt install -y ninja-build git gcc g++ gfortran autoconf pkgconf automake make libtool cmake hwloc openjdk-8-jdk libblas-dev liblpsolve55-dev libarchive-dev doxygen doxygen-latex liblapack-dev libexpat1-dev libsqlite3-dev zlib1g-dev gettext patch clang python3-pip libncurses5-dev libreadline-dev libdigest-perl-md5-perl unzip gcovr lcov libboost-all-dev qt5-default lsb-release libxml2-utils python-lxml python-psutil wget libcurl4-openssl-dev rsync libopenblas-openmp-dev

      - name: Build omc
        run: |
          export DYNAWO_HOME=$(pwd)
          util/envDynawo.sh build-omcDynawo

      - name: Build 3rd party
        run: |
          export DYNAWO_HOME=$(pwd)
          util/envDynawo.sh build-3rd-party

      - name: Build core
        run: |
          export DYNAWO_HOME=$(pwd)
          util/envDynawo.sh config-dynawo
          util/envDynawo.sh build-dynawo-core

      - name: Build models cpp
        run: |
          export DYNAWO_HOME=$(pwd)
          util/envDynawo.sh build-dynawo-models-cpp

      - name: Build models
        run: |
          export DYNAWO_HOME=$(pwd)
          util/envDynawo.sh build-dynawo-models

      - name: Build solvers
        run: |
          export DYNAWO_HOME=$(pwd)
          util/envDynawo.sh build-dynawo-solvers
