name: Nightly 2

on:
  workflow_dispatch:
  schedule:
    - cron:  '0 3 * * 2-6'

jobs:
  bionic:
    name: Linux Bionic
    runs-on: ubuntu-latest
    env:
      DYNAWO_RESULTS_SHOW: "false"
      DYNAWO_BUILD_TYPE: Release
      DYNAWO_PYTHON_COMMAND: python3
      DYNAWO_NB_PROCESSORS_USED: 2

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Build and nrt
        uses: addnab/docker-run-action@v3
        with:
          image: dynawo/dynawo-ci-nightly-bionic:latest
          options: -v ${{ github.workspace }}:/dynawo -e DYNAWO_INSTALL_OPENMODELICA -e DYNAWO_SRC_OPENMODELICA -e DYNAWO_RESULTS_SHOW -e DYNAWO_BUILD_TYPE -e DYNAWO_NB_PROCESSORS_USED -e DYNAWO_PYTHON_COMMAND
          shell: bash
          run: |
            cd /dynawo
            export DYNAWO_HOME=$(pwd)
            util/envDynawo.sh build-user
            sed -i 's/dtw_exceptions = {}/dtw_exceptions = {"EntsoeTestCase3PlayBack":6.5, "HVDC":1, "PmConstAc6aPss3b":1}/' util/nrt_diff/settings.py
            branch=$(util/envDynawo.sh display-environment | grep DYNAWO_BRANCH_NAME | cut -d '=' -f 2)
            util/envDynawo.sh nrt || { cat nrt/output/${branch}/report.html && cat nrt/output/${branch}/nrt_nok.txt && exit 1; }
        env:
          DYNAWO_INSTALL_OPENMODELICA: ${{ runner.workspace }}/OpenModelica/Install
          DYNAWO_SRC_OPENMODELICA: ${{ runner.workspace }}/OpenModelica/Source

  jammy:
    name: Linux Jammy
    runs-on: ubuntu-latest
    container: dynawo/dynawo-ci-nightly-jammy:latest
    env:
      DYNAWO_RESULTS_SHOW: "false"
      DYNAWO_BUILD_TYPE: Release
      DYNAWO_COMPILER: GCC
      DYNAWO_PYTHON_COMMAND: python3
      DYNAWO_NB_PROCESSORS_USED: 2

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Build
        env:
          DYNAWO_INSTALL_OPENMODELICA: ${{ runner.workspace }}/OpenModelica/Install
          DYNAWO_SRC_OPENMODELICA: ${{ runner.workspace }}/OpenModelica/Source
        run: |
          export DYNAWO_HOME=$(pwd)
          util/envDynawo.sh build-user

      - name: NRT
        env:
          DYNAWO_INSTALL_OPENMODELICA: ${{ runner.workspace }}/OpenModelica/Install
          DYNAWO_SRC_OPENMODELICA: ${{ runner.workspace }}/OpenModelica/Source
        run: |
          export DYNAWO_HOME=$(pwd)
          sed -i 's/dtw_exceptions = {}/dtw_exceptions = {"EntsoeTestCase3PlayBack":6.5, "HVDC":1, "PmConstAc6aPss3b":1}/' util/nrt_diff/settings.py
          branch=$(util/envDynawo.sh display-environment | grep DYNAWO_BRANCH_NAME | cut -d '=' -f 2)
          util/envDynawo.sh nrt || { cat nrt/output/${branch}/report.html && cat nrt/output/${branch}/nrt_nok.txt && exit 1; }

  centos7:
    name: Linux Centos7
    runs-on: ubuntu-latest
    env:
      DYNAWO_RESULTS_SHOW: "false"
      DYNAWO_BUILD_TYPE: Release
      DYNAWO_NB_PROCESSORS_USED: 1

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Build and nrt
        uses: addnab/docker-run-action@v3
        with:
          image: dynawo/dynawo-distribution-centos7:latest
          options: -v ${{ github.workspace }}:/dynawo -e DYNAWO_INSTALL_OPENMODELICA -e DYNAWO_SRC_OPENMODELICA -e DYNAWO_RESULTS_SHOW -e DYNAWO_BUILD_TYPE -e DYNAWO_NB_PROCESSORS_USED
          shell: bash
          run: |
            cd /dynawo
            export DYNAWO_HOME=$(pwd)
            util/envDynawo.sh build-user
            branch=$(util/envDynawo.sh display-environment | grep DYNAWO_BRANCH_NAME | cut -d '=' -f 2)
            util/envDynawo.sh nrt || { cat nrt/output/${branch}/report.html && cat nrt/output/${branch}/nrt_nok.txt && exit 1; }
        env:
          DYNAWO_INSTALL_OPENMODELICA: ${{ runner.workspace }}/OpenModelica/Install
          DYNAWO_SRC_OPENMODELICA: ${{ runner.workspace }}/OpenModelica/Source
